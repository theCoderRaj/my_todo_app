{"version":3,"sources":["Components/Lists.jsx","Components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Lists","prop","useState","isDone","setIsDone","className","style","textDecoration","text","onClick","prevValue","id","onDelete","Todo","inputTodo","setInputTodo","inputArr","setInputArr","handleDelete","filter","item","index","type","placeholder","onChange","e","getEventData","target","value","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA8BeA,EA1BD,SAACC,GAAU,IAAD,EACQC,oBAAS,GADjB,mBACbC,EADa,KACLC,EADK,KAYpB,OACI,mCACA,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAsB,oBAAIC,MAAO,CAACC,eAAiBJ,EAAS,eAAiB,QAAvD,SAAiEF,EAAKO,SAEhG,sBAAKH,UAAU,YAAf,UAA2B,wBAAQI,QAdvB,WAChBL,GAAU,SAAAM,GACN,OAAQA,MAYmB,kBAC3B,wBAAQD,QAVM,SAACE,GACnBV,EAAKW,SAASX,EAAKU,KASf,0BC2BOE,EA9CF,WAAO,IAAD,EACmBX,mBAAS,IAD5B,mBACRY,EADQ,KACGC,EADH,OAEiBb,mBAAS,IAF1B,mBAERc,EAFQ,KAEEC,EAFF,KAcTC,EAAe,SAACP,GAClBM,GAAY,SAACP,GACT,OAASA,EAAUS,QAAQ,SAACC,EAAMC,GAC9B,OAAOA,IAAUV,SAK7B,OACI,mCAEI,sBAAKN,UAAU,YAAf,UACA,0CACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UAAuB,uBAAOiB,KAAK,OAAOC,YAAY,aAAaC,SAxB7D,SAACC,GACnB,IAAMC,EAAeD,EAAEE,OAAOC,MAC9Bb,EAAaW,IAsB2FE,MAAOd,IACnG,wBAAQL,QArBH,WACjBQ,GAAY,SAAAP,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,OAE1BC,EAAa,KAiBD,oBAGA,qBAAKV,UAAU,aAAf,SACA,6BACCW,EAASa,KAAI,SAACT,EAAMC,GAClB,OAAO,cAAC,EAAD,CAAOb,KAAQY,EAAkBT,GAAIU,EAAOT,SAAUM,GAA5BG,mBC1BzCS,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.55c8218e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nconst Lists = (prop) => {\r\n    const [isDone, setIsDone] = useState(false);\r\n\r\nconst doneHandler = () =>{\r\n    setIsDone(prevValue => {\r\n        return !prevValue;\r\n    })\r\n}\r\nconst deleteHandler = (id) =>{\r\n    prop.onDelete(prop.id);\r\n};\r\n\r\n    return (\r\n        <>\r\n        <div className=\"items\">\r\n            <div className=\"text\"><li style={{textDecoration : isDone ? \"line-through\" : \"none\"}}>{prop.text}</li></div>\r\n\r\n        <div className=\"items-btn\"><button onClick={doneHandler}>Done</button>\r\n        <button onClick={deleteHandler}>Del</button></div>\r\n        \r\n        </div>\r\n        \r\n        </>\r\n\r\n    )\r\n}\r\nexport default Lists;","import React, { useState } from 'react';\r\nimport Lists from \"./Lists\"\r\n\r\nconst Todo = () => {\r\n    const [inputTodo, setInputTodo] = useState(\"\");\r\n    const [inputArr, setInputArr] = useState([]);\r\n\r\n    const changeHandler = (e) => {\r\n        const getEventData = e.target.value;\r\n        setInputTodo(getEventData);\r\n    }\r\n    const clickHandler = () => {\r\n        setInputArr(prevValue => {\r\n            return([...prevValue, inputTodo])\r\n        })\r\n        setInputTodo(\"\");\r\n    }\r\n    const handleDelete = (id) => {\r\n        setInputArr((prevValue) => {\r\n            return ( prevValue.filter( (item, index) => {\r\n                return index !== id;\r\n            }))\r\n        })\r\n    }\r\n\r\n    return(\r\n        <>\r\n            \r\n            <div className=\"container\">\r\n            <h1>Todo App</h1>\r\n                <div className=\"todo-box\">\r\n                    <div className=\"input\"><input type=\"text\" placeholder=\"Enter todo\" onChange={changeHandler} value={inputTodo} />\r\n                    <button onClick={clickHandler}>Add</button>\r\n                    </div>\r\n                    \r\n                    <div className=\"list-items\">\r\n                    <ul>\r\n                   { inputArr.map((item, index)=>{\r\n                       return <Lists text = {item} key={index} id={index} onDelete={handleDelete}/> \r\n                    })}\r\n                        \r\n                    </ul>\r\n                    </div>\r\n                    \r\n                    </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Todo;","\nimport './App.css';\nimport Todo from './Components/Todo.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}